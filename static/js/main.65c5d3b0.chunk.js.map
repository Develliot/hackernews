{"version":3,"sources":["serviceWorker.ts","theme.ts","urls.ts","components/Typography/index.ts","components/Layout/index.tsx","hooks/useGetRequest.ts","hooks/useScrollPosition.ts","components/Button/styles.ts","components/Button/index.tsx","components/ErrorMessage/styles.ts","components/ErrorMessage/index.tsx","components/HackerNewsStoryCard/styles.ts","components/HackerNewsStoryCard/index.tsx","containers/HackerNewsStoryContainer.tsx","components/HackerNewsStories/styles.ts","components/HackerNewsStories/index.tsx","utils/NumberUtils.ts","containers/HackerNewsStoriesContainer.tsx","pages/Home/index.tsx","pages/DesignSystem/styles.ts","pages/DesignSystem/index.tsx","utils/StringUtils.ts","Routes.tsx","components/Header/styles.ts","components/HeaderNavLink/styles.ts","components/HeaderNavLink/index.tsx","components/Header/index.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","fontSizes","extraTiny","tiny","small","medium","large","extraLarge","extraExtraLarge","extraExtraExtraLarge","colors","white","lightGrey","darkGrey","blue","pink","yellow","theme","breakpoints","globalPadding","spacing","baseText","props","color","textAlign","fontSize","bold","ellipsis","Span","styled","span","Paragraph","p","H1","h1","H2","h2","H3","h3","H4","h4","Block","div","ColorBlock","padding","children","VerticalSpacer","size","PageWrapper","PageContent","RowCenter","ContentWrapper","useGetRequest","initialUrl","initialData","useState","url","setUrl","data","setData","isLoading","setIsLoading","isError","setIsError","fetchData","a","axios","result","useEffect","isBrowser","getScrollPosition","element","useWindow","x","y","target","current","document","body","position","getBoundingClientRect","top","left","height","width","scrollX","scrollY","innerWidth","innerHeight","useScrollPosition","effect","deps","wait","useRef","throttleTimeout","callBack","currPos","prevPos","useLayoutEffect","handleScroll","setTimeout","addEventListener","removeEventListener","ButtonStyled","button","undefined","Button","onClick","ErrorWrapper","ErrorMessage","errorMessage","retry","to","urls","StoryCardWrapper","article","selected","ScoreSection","MainContentWrapper","Title","AuthorSpan","AuthorOuter","AuthorRow","Link","HackerNewsStoryCard","story","setSelected","e","localName","score","href","title","by","memo","storyId","StoryGrid","HackerNewsStories","storyIds","scrollRef","storyCount","setStoryCount","windowHeight","limitedCount","num","min","max","Error","Math","limitNumberWithinRange","ref","slice","map","key","HackerNewsStoriesContainer","storyType","Home","TilesWrapper","FlexWrapRow","ColorTileWrapper","ColorTile","ColorLabelWrapper","colorLabelList","Object","keys","DesignSystem","text","replace","trim","charAt","toUpperCase","camelCaseToCapitalisedCase","ScrollToTop","pathname","useLocation","scrollTo","Routes","path","component","exact","from","HeaderWrapper","header","visible","HeaderInner","Links","ul","HeaderLinkItem","li","HoverInidcator","NavLinkStyled","NavLink","HeaderNavLink","activeClassName","Header","HideOnScroll","hideOnScroll","setHideOnScroll","isShow","useMemo","App","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oNAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kBChBOC,EAAuC,CAChDC,UAAW,YACXC,KAAM,UACNC,MAAO,WACPC,OAAQ,OACRC,MAAO,WACPC,WAAY,UACZC,gBAAiB,SACjBC,qBAAsB,QAkCbC,EAAoC,CAC7CC,MAAO,UACPC,UAAW,UACXC,SAAU,UACVC,KAAM,UACNC,KAAM,UACNC,OAAQ,WAWGC,EARa,CACxBhB,YACAiB,YA1CuB,CACvBZ,MAAO,UA0CPa,cAvCyB,OAwCzBC,QA9BqD,CACrDjB,KAAM,SACNC,MAAO,OACPC,OAAQ,SACRC,MAAO,OACPC,WAAY,OACZC,gBAAiB,QAyBjBE,U,OCxDW,EACL,eADK,EAEG,2BCeZW,EAAW,SAACC,GAAD,wEAEJA,EAAMC,MAAQb,EAAO,GAAD,OAAIY,EAAMC,QAAWb,EAAOG,SAF5C,8BAGCS,EAAME,UAAYF,EAAME,UAAY,OAHrC,6BAKTF,EAAMG,SAAWxB,EAAU,GAAD,OAAIqB,EAAMG,WAAcxB,EAAUI,OALnD,wDAQIiB,EAAMI,KAAO,IAAM,IARvB,4BASCJ,EAAMK,SAAW,SAAW,UAT7B,gCAUML,EAAMK,SAAW,WAAa,QAVpC,OAaJC,EAAOC,IAAOC,KAAV,mEAAGD,CAAH,SACX,SAACP,GAAD,OAA0BD,EAASC,MAG5BS,EAAYF,IAAOG,EAAV,wEAAGH,CAAH,0BAChB,SAACP,GAAD,OAA0BD,EAASC,MAI5BW,EAAKJ,IAAOK,GAAV,iEAAGL,CAAH,iEACT,SAACP,GAAD,OAA0BD,EAASC,MAGxB,gBACTG,EADS,EACTA,SAEiBhB,EAHR,EAETQ,MACIhB,UAAaQ,qBAHR,OAKDgB,GAAsBhB,KAGzB0B,EAAKN,IAAOO,GAAV,iEAAGP,CAAH,yFACT,SAACP,GAAD,OAA0BD,EAASC,MAIxB,gBACTG,EADS,EACTA,SAEiBjB,EAHR,EAETS,MACIhB,UAAaO,gBAHR,OAKDiB,GAAsBjB,KAGzB6B,EAAKR,IAAOS,GAAV,iEAAGT,CAAH,gIACT,SAACP,GAAD,OAA0BD,EAASC,MAIxB,gBACTG,EADS,EACTA,SAEiBlB,EAHR,EAETU,MACIhB,UAAaM,WAHR,OAKDkB,GAAsBlB,KAKzBgC,EAAKV,IAAOW,GAAV,iEAAGX,CAAH,gIACT,SAACP,GAAD,OAA0BD,EAASC,MAIxB,gBACTG,EADS,EACTA,SAEiBpB,EAHR,EAETY,MACIhB,UAAaI,OAHR,OAKDoB,GAAsBpB,KCvFhCoC,EAAQZ,IAAOa,IAAV,gEAAGb,CAAH,2BACa,gBAChBN,EADgB,EAChBA,MADgB,IAEhBN,MACIP,EAHY,EAGZA,OACUC,EAJE,EAIZD,OAAUC,MAJE,OASbY,EAAQb,EAAO,GAAD,OAAIa,IAAWZ,KAQ3BgC,EAA4C,SAAC,GAInD,IAHHpB,EAGE,EAHFA,MAGE,IAFFqB,eAEE,SADFC,EACE,EADFA,SAEA,OACI,kBAACJ,EAAD,CAAOlB,MAAOA,GAAS,SAClBqB,GAAW,kBAACE,EAAD,CAAgBC,KAAK,eAChCF,EACAD,GAAW,kBAACE,EAAD,CAAgBC,KAAK,sBAKhCC,EAAcnB,IAAOa,IAAV,sEAAGb,CAAH,uDAGA,qBAChBZ,MACIP,OAAUE,aAKTqC,EAAcpB,IAAOa,IAAV,sEAAGb,CAAH,yDAGP,qBACTZ,MACIC,YAAeZ,SAYd4C,GANMrB,IAAOa,IAAV,8DAAGb,CAAH,iEAMSA,IAAOa,IAAV,oEAAGb,CAAH,8DAiBTsB,GAXStB,IAAOa,IAAV,iEAAGb,CAAH,oEAKSA,IAAOa,IAAV,uEAAGb,CAAH,gEAMKA,IAAOa,IAAV,yEAAGb,CAAH,kBACZ,gBAAYV,EAAZ,EAAGF,MAASE,cAAZ,kBAAuCA,OAGzC2B,EAAiBjB,IAAOa,IAAV,yEAAGb,CAAH,iBACb,gBACNkB,EADM,EACNA,KADM,IAEN9B,MACIG,EAHE,EAGFA,QACWf,EAJT,EAIFe,QAAWf,OAJT,OASH0C,EAAO3B,EAAQ,GAAD,OAAI2B,IAAU1C,K,iDC3F1B+C,EAAgB,SAACC,EAAoBC,GAAsB,IAAD,EAC7CC,mBAASF,GADoC,mBAC5DG,EAD4D,KACvDC,EADuD,OAE3CF,mBAASD,GAFkC,mBAE5DI,EAF4D,KAEtDC,EAFsD,OAGjCJ,oBAAS,GAHwB,mBAG5DK,EAH4D,KAGjDC,EAHiD,OAIrCN,oBAAS,GAJ4B,mBAI5DO,EAJ4D,KAInDC,EAJmD,KAM7DC,EAAS,uCAAG,WAAOR,GAAP,eAAAS,EAAA,6DACdF,GAAW,GACXF,GAAa,GAFC,kBAIWK,IAAMV,GAJjB,OAIJW,EAJI,OAKVR,EAAQQ,EAAOT,MALL,gDAOVK,GAAW,GAPD,QASdF,GAAa,GATC,yDAAH,sDAgBf,OAJAO,qBAAU,WACNJ,EAAUR,KACX,CAACA,IAEG,CAAEE,OAAME,YAAWE,UAASL,WCjBjCY,EAAY,qBAAOxE,OAEzB,SAASyE,EAAT,GAMI,IALAC,EAKD,EALCA,QACAC,EAID,EAJCA,UAKA,IAAKH,EAAW,MAAO,CAAEI,EAAG,EAAGC,EAAG,GAElC,IAAMC,EAASJ,EAAUA,EAAQK,QAAUC,SAASC,KAC9CC,EAAWJ,EACXA,EAAOK,wBACP,CAAEC,IAAK,EAAGC,KAAM,EAAGC,OAAQ,EAAGC,MAAO,GAE3C,OAAOZ,EACD,CACIC,EAAG5E,OAAOwF,QACVX,EAAG7E,OAAOyF,QACVF,MAAOvF,OAAO0F,WACdJ,OAAQtF,OAAO2F,aAEnB,CACIf,EAAGM,EAASG,KACZR,EAAGK,EAASE,IACZG,MAAOL,EAASK,MAChBD,OAAQJ,EAASI,QAIxB,SAASM,EACZC,EACAC,EACApB,EACAC,EACAoB,GAEA,IAAMb,EAAWc,iBAAOvB,EAAkB,CAAEE,YAAWD,aAEnDuB,EAAiC,KAE/BC,EAAW,WACb,IAAMC,EAAU1B,EAAkB,CAAEC,UAASC,cAC7CkB,EAAO,CAAEO,QAASlB,EAASH,QAASoB,YACpCjB,EAASH,QAAUoB,EACnBF,EAAkB,MAGtBI,2BAAgB,WACZ,IAAMC,EAAe,WACbP,EACwB,OAApBE,IAEAA,EAAkBM,WAAWL,EAAUH,IAG3CG,KAMR,OAFAlG,OAAOwG,iBAAiB,SAAUF,GAE3B,kBAAMtG,OAAOyG,oBAAoB,SAAUH,MACnDR,GAGQF,I,6dCzER,IAAMc,EAAe1E,IAAO2E,OAAV,KACR,qBACTvF,MACIhB,UAAaI,UAGV,oBACPY,MACIG,QAAWjB,EAFR,EAEQA,KAAME,EAFd,EAEcA,OAFd,gBAIFF,EAJE,YAIME,MAIG,gBAChBkB,EADgB,EAChBA,MADgB,IAEhBN,MACIP,EAHY,EAGZA,OACUI,EAJE,EAIZJ,OAAUI,KAJE,OAMbS,EAAQb,EAAO,GAAD,OAAIa,IAAWT,KAIpB,gBACZS,EADY,EACZA,MADY,IAEZN,MACIP,EAHQ,EAGRA,OACUI,EAJF,EAIRJ,OAAUI,KAJF,OAMTS,EAAQb,EAAO,GAAD,OAAIa,IAAWT,KAC3B,YAKF,IAJHS,EAIE,EAJFA,MAIE,IAHFN,MACIP,OAAUC,EAEZ,EAFYA,MAAOE,EAEnB,EAFmBA,SAGrB,OAAQU,GACJ,IAAK,QAEL,IAAK,SACD,OAAOV,EACX,IAAK,OAEL,IAAK,OAEL,IAAK,WAEL,UAAK4F,EAEL,QACI,OAAO9F,MAMK,YAKb,IAJHY,EAIE,EAJFA,MAEcZ,EAEZ,EAHFM,MACIP,OAAUC,MAGd,OAAQY,GACJ,IAAK,QAEL,IAAK,SACD,MAAM,qBACV,IAAK,OAEL,IAAK,OAEL,IAAK,WAEL,UAAKkF,EAEL,QACI,OAAO9F,MAGV,gBACLY,EADK,EACLA,MADK,IAELN,MACIP,EAHC,EAGDA,OACUI,EAJT,EAIDJ,OAAUI,KAJT,OAMFS,EAAQb,EAAO,GAAD,OAAIa,IAAWT,KC9E/B4F,EAAmC,SAAC,GAI1C,IAAD,IAHFnF,aAGE,MAHM,OAGN,MAFFoF,eAEE,MAFQ,kBAAM,MAEd,EADF9D,EACE,EADFA,SAEA,OACI,kBAAC0D,EAAD,CAAcI,QAASA,EAASpF,MAAOA,GAClCsB,ICfA+D,EAAe/E,IAAOa,IAAV,2EAAGb,CAAH,0DACD,qBAChBZ,MACIP,OAAUC,SAGP,qBACPM,MACIG,QAAWf,UCMVwG,EAAyC,SAAC,GAGhD,IAFHC,EAEE,EAFFA,aACAC,EACE,EADFA,MAEA,OACI,kBAACH,EAAD,KACI,kBAACzE,EAAD,yBACA,kBAACW,EAAD,CAAgBC,KAAK,UACrB,kBAAChB,EAAD,KAAY+E,GACZ,kBAAChE,EAAD,CAAgBC,KAAK,UACpBgE,EACG,oCACI,kBAAC,EAAD,CAAQJ,QAASI,GAAjB,SACA,kBAACjE,EAAD,CAAgBC,KAAK,YAEzB,KACJ,kBAAC,IAAD,CAAMiE,GAAIC,GACN,kBAAC,EAAD,CAAQ1F,MAAM,YAAd,W,q5CC9BT,IAAM2F,EAAmBrF,IAAOsF,QAAV,KACL,gBAChBC,EADgB,EAChBA,SADgB,IAEhBnG,MACIP,OAAUI,EAHE,EAGFA,KAAMC,EAHJ,EAGIA,KAHJ,gBAKXqG,EAAWrG,EAAOD,MAQZ,qBAAGsG,SACN,qBACA,qBAAGA,SACH,qBAOHC,GAAexF,IAAOa,IAAV,KAEV,qBACPzB,MACIG,QAAWhB,SAKVkH,GAAqBzF,IAAOa,IAAV,KAGhB,oBACPzB,MACIG,QAAWhB,EAFR,EAEQA,MAAOC,EAFf,EAEeA,OAFf,gBAIFD,EAJE,YAIOC,EAJP,YAIiBD,EAJjB,SAOFmH,GAAQ1F,YAAOU,EAAPV,CAAH,KACD,qBACTZ,MACIhB,UAAaG,SAGZ,qBACLa,MACIP,OAAUM,UAcTwG,GAAa3F,YAAOD,EAAPC,CAAH,KAIV4F,GAAc5F,IAAOa,IAAV,KAIXgF,GAAY7F,YAAOE,EAAPF,CAAH,KAST8F,GAAO9F,IAAOoC,EAAV,KCxDJ2D,GAAgD,SAAC,GAKvD,IAJH9D,EAIE,EAJFA,QACAF,EAGE,EAHFA,UACAiE,EAEE,EAFFA,MACAd,EACE,EADFA,MACE,EAC8BxD,oBAAS,GADvC,mBACK6D,EADL,KACeU,EADf,KAaF,OACI,oCACKhE,EACG,kBAAC,EAAD,CACIgD,aAAa,2BACbC,MAAOA,IAEXnD,EACA,oCACI,gDAIJiE,EACA,kBAACX,EAAD,CAAkBP,QAxBP,SAACoB,GAIpB,GAA4C,OAAvCA,EAAEpD,OAAuBqD,UAC1B,OAAO,KAEPD,EAAEpD,QAAQmD,GAAaV,IAiBwBA,SAAUA,GACjD,kBAACC,GAAD,KACI,kBAACtF,EAAD,CAAWR,MAAM,QAAQC,UAAU,UAAnC,SAGA,kBAACO,EAAD,CAAWR,MAAM,QAAQC,UAAU,UAC9BqG,EAAMI,QAGf,kBAACX,GAAD,KACI,kBAACK,GAAD,CAAMO,KAAML,EAAMrE,IAAKmB,OAAO,UAC1B,kBAAC4C,GAAD,CAAOhG,MAAM,SAASsG,EAAMM,QAEhC,kBAACV,GAAD,KACI,kBAACC,GAAD,CAAWnG,MAAM,SACb,kBAACK,EAAD,CAAML,MAAM,SAAZ,OACA,kBAACiG,GAAD,CAAYjG,MAAM,QAAQG,MAAM,GAC3BmG,EAAMO,QAM3B,OCpCDC,ID2CAA,eAAKT,IC3CLS,gBA1BmD,SAAC,GAE5D,IADHC,EACE,EADFA,QAEM9E,EAAG,UArBgB,+CAqBhB,OAA6B8E,EAA7B,SADP,EAE2ClF,EAAcI,EAAK,IAAxDE,EAFN,EAEMA,KAAME,EAFZ,EAEYA,UAAWE,EAFvB,EAEuBA,QAASL,EAFhC,EAEgCA,OAC5BoE,EAAQnE,EAEdU,qBAAU,WACNX,EAAOD,KACR,CAACC,EAAQD,IAMZ,OACI,kBAAC,GAAD,CACIM,QAASA,EACTF,UAAWA,EACXmD,MARM,WACVtD,EAAOD,IAQHqE,MAAOA,Q,sWCxCZ,IAAMU,GAAY1G,IAAOa,IAAV,MCyBT8F,GAA8C,SAAC,GAKrD,IAJH1E,EAIE,EAJFA,QACAF,EAGE,EAHFA,UACA6E,EAEE,EAFFA,SACA1B,EACE,EADFA,MAEM2B,EAAY7C,iBAAuB,MADvC,EAEkCtC,mBAxBR,IAsB1B,mBAEKoF,EAFL,KAEiBC,EAFjB,KAGIvE,EAAY,qBAAOxE,OAyCzB,OAtCA4F,GACI,YAIO,IAvBXf,EACAS,EACA0D,EAkBQ7C,EAGE,EAHFA,QAIA,IACK3B,IACAqE,IACAA,EAAU9D,SACX+D,GAvCW,IAyCX,OAAO,KAUX,GAxCRjE,EAkCYsB,EAAQtB,EAjCpBS,EAkCYa,EAAQb,OAjCpB0D,EAkCYhJ,OAAO2F,YAhCZd,EAAIS,GAAU0D,EAoCG,CACZ,IACMC,EC9DgB,SAClCC,EACAC,EACAC,GAEA,GAAID,EAAMC,EACN,MAAM,IAAIC,MAAM,gCAEpB,OAAOC,KAAKH,IAAIG,KAAKF,IAAIF,EAAKC,GAAMC,GDsDHG,CADST,EAnDd,GAsDZ,EAvDO,KA0DXC,EAAcE,MAGtB,CAACH,GACDD,GACA,EACA,KAIA,oCACK5E,EACG,kBAAC,EAAD,CACIgD,aAAa,6BACbC,MAAOA,IAEXnD,EACA,kBAAC2E,GAAD,KACI,kDAOJ,kBAACA,GAAD,CAAWc,IAAKX,GACXD,EAASa,MAAM,EAAGX,GAAYY,KAAI,SAACjB,GAAD,OAC/B,kBAAC,GAAD,CACIkB,IAAKlB,EACLA,QAASA,UE7DtBmB,GAzBqD,SAAC,GAE9D,IADHC,EACE,EADFA,UAEMlG,EAAG,UATe,0CASf,OAA4BkG,EAA5B,SADP,EAE2CtG,EAAcI,EAAK,IAAxDE,EAFN,EAEMA,KAAME,EAFZ,EAEYA,UAAWE,EAFvB,EAEuBA,QAASL,EAFhC,EAEgCA,OAC5BgF,EAAW/E,EAEjBU,qBAAU,WACNX,EAAOD,KACR,CAACC,EAAQD,IAMZ,OACI,kBAAC,GAAD,CACIM,QAASA,EACTF,UAAWA,EACXmD,MARM,WACVtD,EAAOD,IAQHiF,SAAUA,KCFPkB,GAjBK,WAChB,OACI,kBAAC3G,EAAD,KACI,kBAACC,EAAD,KACI,kBAAC,EAAD,KACI,kBAACE,EAAD,KACI,kBAACL,EAAD,CAAgBC,KAAK,oBACrB,kBAACd,EAAD,oBACA,kBAACa,EAAD,CAAgBC,KAAK,UACrB,kBAAC,GAAD,CAA4B2G,UAAU,oBClBjDE,GAAe/H,IAAOa,IAAV,0EAAGb,CAAH,iBAIZgI,GAAchI,IAAOa,IAAV,yEAAGb,CAAH,2FAKV,gBAESzB,EAFT,EACNa,MACIG,QAAWhB,MAFT,iBAIAA,MAGD0J,GAAmBjI,IAAOa,IAAV,8EAAGb,CAAH,kBACd,qBACPZ,MACIG,QAAWhB,SAKV2J,GAAYlI,IAAOa,IAAV,uEAAGb,CAAH,mGAEP,oBACPZ,MACIG,QAAWhB,EAFR,EAEQA,MAAOG,EAFf,EAEeA,WAFf,gBAIFA,EAJE,YAIYH,EAJZ,YAIqBA,EAJrB,YAI8BA,MACrB,qBAAGmB,SAIdyI,GAAoBnI,IAAOa,IAAV,+EAAGb,CAAH,oGAIN,qBAChBZ,MACIP,OAAUC,SAGP,qBACPM,MACIG,QAAWjB,QCzBjB8J,GAAiBC,OAAOC,KAAKzJ,GA8JpB0J,GA5Ja,WACxB,OACI,kBAACpH,EAAD,KACI,kBAACC,EAAD,KACI,kBAAC,EAAD,KACI,kBAACH,EAAD,CAAgBC,KAAK,oBACrB,kBAACI,EAAD,KACI,kBAAClB,EAAD,sBACA,kBAACa,EAAD,CAAgBC,KAAK,UACrB,kBAACZ,EAAD,gBACA,kBAACW,EAAD,CAAgBC,KAAK,UACrB,kBAAC6G,GAAD,KACI,kBAACC,GAAD,KACKI,GAAeV,KAAI,SAAAhI,GAAK,OACrB,kBAACuI,GAAD,CAAkBN,IAAKjI,GACnB,kBAACwI,GAAD,CAAWxI,MAAOb,EAAO,GAAD,OAAIa,KACxB,kBAACyI,GAAD,KACI,kBAACpI,EAAD,KC1CN,SAACyI,GACvC,IAAMlG,EAASkG,EAAKC,QAAQ,WAAY,OAAOC,OAC/C,OAAOpG,EAAOqG,OAAO,GAAGC,cAAgBtG,EAAOmF,MAAM,GDyCJoB,CACGnJ,GAFR,KAMA,kBAACK,EAAD,KACKlB,EAAO,GAAD,OAAIa,eAW/C,kBAAC,EAAD,CAAYA,MAAM,UACd,kBAACuB,EAAD,CAAgBC,KAAK,WACrB,kBAACI,EAAD,KACI,kBAAChB,EAAD,CAAIZ,MAAM,YAAV,mBACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAACV,EAAD,CAAId,MAAM,YAAV,UACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAAChB,EAAD,CAAWR,MAAM,YAAjB,0BAMR,kBAAC,EAAD,CAAYA,MAAM,QACd,kBAACuB,EAAD,CAAgBC,KAAK,WACrB,kBAACI,EAAD,KACI,kBAACd,EAAD,CAAId,MAAM,SAAV,QACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAAChB,EAAD,CAAWR,MAAM,SAAjB,0BAMR,kBAAC,EAAD,CAAYA,MAAM,SACd,kBAACuB,EAAD,CAAgBC,KAAK,WACrB,kBAACI,EAAD,KACI,kBAACd,EAAD,CAAId,MAAM,YAAV,SACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAAChB,EAAD,CAAWR,MAAM,YAAjB,0BAMR,kBAAC,EAAD,CAAYA,MAAM,QACd,kBAACuB,EAAD,CAAgBC,KAAK,WACrB,kBAACI,EAAD,KACI,kBAACd,EAAD,CAAId,MAAM,SAAV,QACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAAChB,EAAD,CAAWR,MAAM,SAAjB,0BAMR,kBAAC,EAAD,CAAYA,MAAM,YACd,kBAACuB,EAAD,CAAgBC,KAAK,WACrB,kBAACI,EAAD,KACI,kBAACd,EAAD,CAAId,MAAM,SAAV,aACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAAChB,EAAD,CAAWR,MAAM,SAAjB,0BAMR,kBAAC,EAAD,CAAYA,MAAM,QACd,kBAACuB,EAAD,CAAgBC,KAAK,WACrB,kBAACI,EAAD,KACI,kBAAChB,EAAD,CAAIZ,MAAM,SAAV,cACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAACd,EAAD,CAAIV,MAAM,SAAV,mBACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAACZ,EAAD,CAAIZ,MAAM,SAAV,mBACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAACV,EAAD,CAAId,MAAM,SAAV,mBACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAAChB,EAAD,CAAWR,MAAM,SAAjB,4BAMR,kBAAC,EAAD,CAAYA,MAAM,QAAQqB,SAAS,GAC/B,kBAACE,EAAD,CAAgBC,KAAK,eACrB,kBAACI,EAAD,KACI,kBAACL,EAAD,CAAgBC,KAAK,WACrB,kBAACZ,EAAD,CAAIZ,MAAM,YAAV,YACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAACV,EAAD,CAAId,MAAM,YAAV,WACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAAC,EAAD,8BACA,kBAACD,EAAD,CAAgBC,KAAK,UACrB,kBAAC,EAAD,CAAQxB,MAAM,QAAd,eACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAAC,EAAD,CAAQxB,MAAM,YAAd,oBACA,kBAACuB,EAAD,CAAgBC,KAAK,WAG7B,kBAAC,EAAD,CAAYxB,MAAM,OAAOqB,SAAS,GAC9B,kBAACE,EAAD,CAAgBC,KAAK,SACrB,kBAACI,EAAD,KACI,kBAAC,EAAD,CAAQ5B,MAAM,UAAd,iBACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAAC,EAAD,CAAQxB,MAAM,SAAd,gBACA,kBAACuB,EAAD,CAAgBC,KAAK,WAI7B,kBAAC,EAAD,CAAYxB,MAAM,OAAOqB,SAAS,GAC9B,kBAACE,EAAD,CAAgBC,KAAK,eACrB,kBAACI,EAAD,KACI,kBAACL,EAAD,CAAgBC,KAAK,WACrB,kBAACZ,EAAD,CAAIZ,MAAM,SAAV,cACA,kBAACuB,EAAD,CAAgBC,KAAK,UACrB,kBAACV,EAAD,CAAId,MAAM,SAAV,iBACA,kBAACuB,EAAD,CAAgBC,KAAK,WACrB,kBAAC,EAAD,CACI+D,aAAa,2BACbC,MAAO,eAEX,kBAACjE,EAAD,CAAgBC,KAAK,WAEzB,kBAACD,EAAD,CAAgBC,KAAK,wBEtK5B4H,GAAkB,WAAO,IAC1BC,EAAaC,cAAbD,SAOR,OALAxG,qBAAU,gBACgBqC,WAAX5G,QAAwBA,OAAOiL,UACtCjL,OAAOiL,SAAS,EAAG,KAExB,CAACF,IACG,MAuBIG,GApBW,WACtB,OACI,oCACI,kBAAC,GAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,KAAM/D,EACNgE,UAAWb,KAEf,kBAAC,IAAD,CAAOc,OAAO,EAAMF,KAAM/D,EAAWgE,UAAWtB,KAChD,kBAAC,IAAD,CAAUwB,KAAK,IAAInE,GAAIC,OC3B1BmE,GAAgBvJ,IAAOwJ,OAAV,wEAAGxJ,CAAH,sKAOT,qBACTZ,MACIC,YAAeZ,SAIT,qBAAGgL,QACN,gBACA,qBAAGA,QAA4C,WAIjDC,GAAc1J,IAAOa,IAAV,sEAAGb,CAAH,qDAEA,qBAChBZ,MACIP,OAAUG,YAGP,oBACPI,MACeb,EAFR,EAEHgB,QAAWhB,MACXe,EAHG,EAGHA,cAHG,gBAKFf,EALE,YAKOe,MAGTqK,GAAQ3J,IAAO4J,GAAV,gEAAG5J,CAAH,8GAED,qBACTZ,MACIC,YAAeZ,SCpCdoL,GAAiB7J,IAAO8J,GAAV,6EAAG9J,CAAH,2BAEb,gBAESzB,EAFT,EACNa,MACIG,QAAWhB,MAFT,kBAICA,EAJD,WAODwL,GAAiB/J,IAAOa,IAAV,6EAAGb,CAAH,2GAEH,qBAChBZ,MACIP,OAAUM,UAGJ,qBACVC,MACIG,QAAWjB,QAcV0L,IANYhK,IAAOa,IAAV,wEAAGb,CAAH,6DAMOA,YAAOiK,KAAV,4EAAGjK,CAAH,kNAKpBE,EAMI6J,GASA7J,GACW,qBACLd,MACIP,OAAUM,WCtDjB+K,GAAgB,SAAC,GAQvB,IAPH/E,EAOE,EAPFA,GACAmB,EAME,EANFA,MAME,IALF+C,aAKE,SACF,OACI,kBAACQ,GAAD,KACI,kBAACG,GAAD,CAAeX,MAAOA,EAAOlE,GAAIA,EAAIgF,gBAAgB,YACjD,kBAACjK,EAAD,CAAWR,MAAM,SAAS4G,GAC1B,kBAACjF,EAAD,KACI,kBAAC0I,GAAD,UCRPK,GAAS,SAAC,GAAuC,IAArCX,EAAoC,EAApCA,QACrB,OACI,kBAACF,GAAD,CAAeE,QAASA,GACpB,kBAACC,GAAD,KACI,kBAACpJ,EAAD,CAAIZ,MAAM,SAAV,eACA,kBAACuB,EAAD,CAAgBC,KAAK,WACrB,6BACI,kBAACyI,GAAD,KACI,kBAAC,GAAD,CACIxE,GAAIC,EACJkB,MAAM,OACN+C,OAAO,IAEX,kBAAC,GAAD,CACIlE,GAAIC,EACJkB,MAAM,uBAgCnB+D,GAvBa,WAAO,IAAD,EACU3I,oBAAS,GADnB,mBACvB4I,EADuB,KACTC,EADS,KAoB9B,OAjBA3G,GACI,YAMO,IALHQ,EAKE,EALFA,QAMMoG,EADJ,EAJFrG,QAKuBtB,GAAKuB,EAAQvB,EAChC2H,IAAWF,GAAcC,EAAgBC,KAEjD,CAACF,GACD,MACA,EACA,KAGGG,mBAAQ,kBAAM,kBAAC,GAAD,CAAQhB,QAASa,MAAkB,CAACA,KChC9CI,GAdO,WAClB,OACI,oCACI,kBAAC,IAAD,CAAetL,MAAOA,GAClB,kBAAC,IAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,UCPpBuL,IAASC,OAAO,kBAAC,GAAD,MAAS5H,SAAS6H,eAAe,S5BiI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.65c5d3b0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { DefaultTheme } from 'styled-components';\n\nexport const fontSizes: { [key: string]: string } = {\n    extraTiny: '0.6.25rem',\n    tiny: '0.75rem',\n    small: '0.875rem',\n    medium: '1rem',\n    large: '1.125rem',\n    extraLarge: '1.25rem',\n    extraExtraLarge: '1.5rem',\n    extraExtraExtraLarge: '3rem',\n};\n\nexport const breakpoints = {\n    large: '1400px',\n};\n\nexport const globalPadding = '10vw';\n\nexport type SpacingType =\n    | 'tiny'\n    | 'small'\n    | 'medium'\n    | 'large'\n    | 'extraLarge'\n    | 'extraExtraLarge';\n\nexport const spacing: { [key in SpacingType]: string } = {\n    tiny: '0.5rem',\n    small: '1rem',\n    medium: '1.5rem',\n    large: '3rem',\n    extraLarge: '4rem',\n    extraExtraLarge: '8rem',\n};\n\nexport type ColorType =\n    | 'white'\n    | 'darkGrey'\n    | 'lightGrey'\n    | 'blue'\n    | 'pink'\n    | 'yellow';\n\nexport const colors: { [key: string]: string } = {\n    white: '#F3F7F0',\n    lightGrey: '#d4d4d4',\n    darkGrey: '#343434',\n    blue: '#1B4965',\n    pink: '#A93F55',\n    yellow: '#FFC857',\n};\n\nconst theme: DefaultTheme = {\n    fontSizes,\n    breakpoints,\n    globalPadding,\n    spacing,\n    colors,\n};\n\nexport default theme;\n","// The only reason why everything is prefixed with '/showcase'\n// is to get react url router to play ball with github pages\nexport default {\n    home: '/hackernews/',\n    designSystem: '/hackernews/designSystem',\n};\n","import styled from 'styled-components/macro';\nimport { colors, fontSizes } from 'src/theme';\n\ntype BaseTextProps = {\n    color?: string;\n    textAlign?: 'left' | 'right' | 'center';\n    fontSize?:\n        | 'extraTiny'\n        | 'tiny'\n        | 'small'\n        | 'medium'\n        | 'large'\n        | 'extraLarge'\n        | 'extraExtraLarge'\n        | 'extraExtraExtraLarge';\n    bold?: boolean;\n    ellipsis?: boolean;\n};\n\nconst baseText = (props: BaseTextProps) => `\n    font-family: 'Quicksand', sans-serif;\n    color: ${props.color ? colors[`${props.color}`] : colors.darkGrey};\n    text-align: ${props.textAlign ? props.textAlign : 'left'};\n    font-size: ${\n        props.fontSize ? fontSizes[`${props.fontSize}`] : fontSizes.medium\n    };\n    line-height: 1.5em;\n    font-weight: ${!!props.bold ? 700 : 400};\n    overflow: ${!!props.ellipsis ? 'hidden' : 'visible'}\n    text-overflow: ${!!props.ellipsis ? 'ellipsis' : 'unset'}\n`;\n\nexport const Span = styled.span`\n    ${(props: BaseTextProps) => baseText(props)}\n`;\n\nexport const Paragraph = styled.p`\n    ${(props: BaseTextProps) => baseText(props)}\n    max-width: 600px;\n`;\n\nexport const H1 = styled.h1`\n    ${(props: BaseTextProps) => baseText(props)}\n    text-transform: uppercase;\n    font-weight: 700;\n    font-size: ${({\n        fontSize,\n        theme: {\n            fontSizes: { extraExtraExtraLarge },\n        },\n    }: any) => (fontSize ? fontSize : extraExtraExtraLarge)};\n`;\n\nexport const H2 = styled.h2`\n    ${(props: BaseTextProps) => baseText(props)}\n    text-transform: uppercase;\n    font-weight: 700;\n    letter-spacing: -0.03rem;\n    font-size: ${({\n        fontSize,\n        theme: {\n            fontSizes: { extraExtraLarge },\n        },\n    }: any) => (fontSize ? fontSize : extraExtraLarge)};\n`;\n\nexport const H3 = styled.h3`\n    ${(props: BaseTextProps) => baseText(props)}\n    text-transform: uppercase;\n    font-weight: 700;\n    letter-spacing: -0.03rem;\n    font-size: ${({\n        fontSize,\n        theme: {\n            fontSizes: { extraLarge },\n        },\n    }: any) => (fontSize ? fontSize : extraLarge)};\n    text-overflow: ellipsis;\n    overflow: hidden;\n`;\n\nexport const H4 = styled.h4`\n    ${(props: BaseTextProps) => baseText(props)}\n    text-transform: uppercase;\n    font-weight: 700;\n    letter-spacing: -0.03rem;\n    font-size: ${({\n        fontSize,\n        theme: {\n            fontSizes: { medium },\n        },\n    }: any) => (fontSize ? fontSize : medium)};\n    text-overflow: ellipsis;\n    overflow: hidden;\n`;\n","import React, { FunctionComponent } from 'react';\nimport styled from 'styled-components/macro';\nimport { SpacingType, ColorType } from 'src/theme';\n\nconst Block = styled.div`\n    background-color: ${({\n        color,\n        theme: {\n            colors,\n            colors: { white },\n        },\n    }: {\n        theme: any;\n        color: ColorType;\n    }) => (color ? colors[`${color}`] : white)};\n`;\n\ntype BlockProps = {\n    color?: ColorType;\n    padding?: boolean;\n};\n\nexport const ColorBlock: FunctionComponent<BlockProps> = ({\n    color,\n    padding = true,\n    children,\n}) => {\n    return (\n        <Block color={color || 'white'}>\n            {padding && <VerticalSpacer size='extraLarge' />}\n            {children}\n            {padding && <VerticalSpacer size='extraExtraLarge' />}\n        </Block>\n    );\n};\n\nexport const PageWrapper = styled.div`\n    min-height: 100vh;\n    width: 100%;\n    background-color: ${({\n        theme: {\n            colors: { lightGrey },\n        },\n    }) => lightGrey};\n`;\n\nexport const PageContent = styled.div`\n    width: 100%;\n    height: 100%;\n    max-width: ${({\n        theme: {\n            breakpoints: { large },\n        },\n    }) => large};\n    margin: 0 auto;\n`;\n\nexport const Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n`;\n\nexport const RowCenter = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nexport const Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n`;\nexport const ColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nexport const ContentWrapper = styled.div`\n    padding: ${({ theme: { globalPadding } }) => `0 ${globalPadding}`};\n`;\n\nexport const VerticalSpacer = styled.div`\n    height: ${({\n        size,\n        theme: {\n            spacing,\n            spacing: { medium },\n        },\n    }: {\n        size: SpacingType;\n        theme: any;\n    }) => (size ? spacing[`${size}`] : medium)};\n`;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const useGetRequest = (initialUrl: string, initialData: any) => {\n    const [url, setUrl] = useState(initialUrl);\n    const [data, setData] = useState(initialData);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n\n    const fetchData = async (url: string) => {\n        setIsError(false);\n        setIsLoading(true);\n        try {\n            const result = await axios(url);\n            setData(result.data);\n        } catch (error) {\n            setIsError(true);\n        }\n        setIsLoading(false);\n    };\n\n    useEffect(() => {\n        fetchData(url);\n    }, [url]);\n\n    return { data, isLoading, isError, setUrl };\n};\n\nexport default useGetRequest;\n","import {\n    useRef,\n    useLayoutEffect,\n    DependencyList,\n    RefObject,\n    MutableRefObject,\n} from 'react';\n\nconst isBrowser = typeof window !== `undefined`;\n\nfunction getScrollPosition({\n    element,\n    useWindow,\n}: {\n    element?: RefObject<HTMLElement> | MutableRefObject<undefined> | null;\n    useWindow: boolean;\n}) {\n    if (!isBrowser) return { x: 0, y: 0 };\n\n    const target = element ? element.current : document.body;\n    const position = target\n        ? target.getBoundingClientRect()\n        : { top: 0, left: 0, height: 0, width: 0 };\n\n    return useWindow\n        ? {\n              x: window.scrollX,\n              y: window.scrollY,\n              width: window.innerWidth,\n              height: window.innerHeight,\n          }\n        : {\n              x: position.left,\n              y: position.top,\n              width: position.width,\n              height: position.height,\n          };\n}\n\nexport function useScrollPosition(\n    effect: any,\n    deps: DependencyList,\n    element: RefObject<HTMLElement> | MutableRefObject<undefined> | null,\n    useWindow: boolean,\n    wait: number\n) {\n    const position = useRef(getScrollPosition({ useWindow, element }));\n\n    let throttleTimeout: number | null = null;\n\n    const callBack = () => {\n        const currPos = getScrollPosition({ element, useWindow });\n        effect({ prevPos: position.current, currPos });\n        position.current = currPos;\n        throttleTimeout = null;\n    };\n\n    useLayoutEffect(() => {\n        const handleScroll = () => {\n            if (wait) {\n                if (throttleTimeout === null) {\n                    // eslint-disable-next-line\n                    throttleTimeout = setTimeout(callBack, wait);\n                }\n            } else {\n                callBack();\n            }\n        };\n\n        window.addEventListener('scroll', handleScroll);\n\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, deps);\n}\n\nexport default useScrollPosition;\n","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n    font-size: ${({\n        theme: {\n            fontSizes: { medium },\n        },\n    }) => medium};\n    padding: ${({\n        theme: {\n            spacing: { tiny, medium },\n        },\n    }) => `${tiny} ${medium}`};\n    font-weight: 500;\n    text-transform: uppercase;\n    transition: color 0.3s ease, background-color 0.3s ease;\n    background-color: ${({\n        color,\n        theme: {\n            colors,\n            colors: { blue },\n        },\n    }) => (color ? colors[`${color}`] : blue)};\n    border-width: 0.12rem;\n    border-style: solid;\n    border-radius: 1.5rem;\n    border-color: ${({\n        color,\n        theme: {\n            colors,\n            colors: { blue },\n        },\n    }) => (color ? colors[`${color}`] : blue)};\n    color: ${({\n        color,\n        theme: {\n            colors: { white, darkGrey },\n        },\n    }) => {\n        switch (color) {\n            case 'white':\n                return darkGrey;\n            case 'yellow':\n                return darkGrey;\n            case 'blue':\n                return white;\n            case 'pink':\n                return white;\n            case 'darkGrey':\n                return white;\n            case undefined:\n                return white;\n            default:\n                return white;\n        }\n    }};\n\n    &:hover,\n    &:focus {\n        background-color: ${({\n            color,\n            theme: {\n                colors: { white },\n            },\n        }) => {\n            switch (color) {\n                case 'white':\n                    return `rgba(0, 0, 0, 0.4)`;\n                case 'yellow':\n                    return `rgba(0, 0, 0, 0.4)`;\n                case 'blue':\n                    return white;\n                case 'pink':\n                    return white;\n                case 'darkGrey':\n                    return white;\n                case undefined:\n                    return white;\n                default:\n                    return white;\n            }\n        }};\n        color: ${({\n            color,\n            theme: {\n                colors,\n                colors: { blue },\n            },\n        }) => (color ? colors[`${color}`] : blue)};\n    }\n`;\n","import React, { FunctionComponent } from 'react';\nimport { ColorType } from 'src/theme';\n\nimport { ButtonStyled } from './styles';\n\ntype Props = {\n    color?: ColorType;\n    onClick?: () => void;\n};\n\nexport const Button: FunctionComponent<Props> = ({\n    color = 'blue',\n    onClick = () => null,\n    children,\n}) => {\n    return (\n        <ButtonStyled onClick={onClick} color={color}>\n            {children}\n        </ButtonStyled>\n    );\n};\n\nexport default Button;\n","import styled from 'styled-components/macro';\n\nexport const ErrorWrapper = styled.div`\n    background-color: ${({\n        theme: {\n            colors: { white },\n        },\n    }) => white};\n    padding: ${({\n        theme: {\n            spacing: { medium },\n        },\n    }) => medium};\n    border-radius: 1rem;\n`;\n","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport urls from 'src/urls';\n\nimport { Button } from 'src/components/Button';\nimport { H2, Paragraph } from 'src/components/Typography';\nimport { VerticalSpacer } from 'src/components/Layout';\n\nimport { ErrorWrapper } from './styles';\n\ntype Props = {\n    errorMessage: string;\n    retry?: () => void;\n};\n\nexport const ErrorMessage: FunctionComponent<Props> = ({\n    errorMessage,\n    retry,\n}) => {\n    return (\n        <ErrorWrapper>\n            <H2>Something broke!</H2>\n            <VerticalSpacer size='large' />\n            <Paragraph>{errorMessage}</Paragraph>\n            <VerticalSpacer size='large' />\n            {retry ? (\n                <>\n                    <Button onClick={retry}>Retry</Button>\n                    <VerticalSpacer size='medium' />\n                </>\n            ) : null}\n            <Link to={urls.home}>\n                <Button color='darkGrey'>Home</Button>\n            </Link>\n        </ErrorWrapper>\n    );\n};\n\nexport default ErrorMessage;\n","import styled from 'styled-components';\nimport { H4, Span, Paragraph } from 'src/components/Typography';\n\nexport const StoryCardWrapper = styled.article`\n    background-color: ${({\n        selected,\n        theme: {\n            colors: { blue, pink },\n        },\n    }) => `${selected ? pink : blue}`};\n    border-radius: 0.25rem;\n    transition: background-color 0.3s ease;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n\n    grid-column: ${({ selected }: { selected: boolean }) =>\n        selected ? `span 2` : `span 1`};\n    grid-row: ${({ selected }: { selected: boolean }) =>\n        selected ? `span 2` : `span 1`};\n\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nexport const ScoreSection = styled.div`\n    flex-basis: 2rem;\n    padding: ${({\n        theme: {\n            spacing: { small },\n        },\n    }) => small};\n`;\n\nexport const MainContentWrapper = styled.div`\n    flex-basis: 0px;\n    flex-grow: 1;\n    padding: ${({\n        theme: {\n            spacing: { small, medium },\n        },\n    }) => `${small} ${medium} ${small} 0`};\n`;\n\nexport const Title = styled(H4)`\n    font-size: ${({\n        theme: {\n            fontSizes: { small },\n        },\n    }) => small};\n    color: ${({\n        theme: {\n            colors: { yellow },\n        },\n    }) => yellow};\n    text-overflow: ellipsis;\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 5;\n    -webkit-box-orient: vertical;\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nexport const AuthorSpan = styled(Span)`\n    text-overflow: ellipsis;\n`;\n\nexport const AuthorOuter = styled.div`\n    position: relative;\n`;\n\nexport const AuthorRow = styled(Paragraph)`\n    left: 0;\n    right: 0;\n    position: absolute;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n`;\n\nexport const Link = styled.a`\n    text-decoration: none;\n`;\n","import React, {\n    FunctionComponent,\n    memo,\n    useState,\n    SyntheticEvent,\n} from 'react';\n\nimport { ErrorMessage } from 'src/components/ErrorMessage';\nimport { Paragraph, Span } from 'src/components/Typography';\nimport {\n    StoryCardWrapper,\n    ScoreSection,\n    MainContentWrapper,\n    Title,\n    AuthorRow,\n    AuthorSpan,\n    AuthorOuter,\n    Link,\n} from './styles';\n\nimport { StoryType } from 'src/containers/HackerNewsStoryContainer';\n\ntype Props = {\n    isError: boolean;\n    isLoading: boolean;\n    story: StoryType;\n    retry: () => void;\n};\n\nexport const HackerNewsStoryCard: FunctionComponent<Props> = ({\n    isError,\n    isLoading,\n    story,\n    retry,\n}) => {\n    const [selected, setSelected] = useState(false);\n\n    const toggleSelected = (e: SyntheticEvent) => {\n        // TODO: there must be a more elegant way to do this\n        // with styled components and typescript\n        // we don't want anything to happen the title is clicked as it is a link\n        if ((e.target as HTMLElement).localName === 'h4') {\n            return null;\n        }\n        if (e.target) setSelected(!selected);\n    };\n\n    return (\n        <>\n            {isError ? (\n                <ErrorMessage\n                    errorMessage='Unable to retrieve story'\n                    retry={retry}\n                />\n            ) : isLoading ? (\n                <>\n                    <span>Loading story</span>\n                    {/* TODO: loading state */}\n                    {/* <StoryCardLoading /> */}\n                </>\n            ) : story ? (\n                <StoryCardWrapper onClick={toggleSelected} selected={selected}>\n                    <ScoreSection>\n                        <Paragraph color='white' textAlign='center'>\n                            Score\n                        </Paragraph>\n                        <Paragraph color='white' textAlign='center'>\n                            {story.score}\n                        </Paragraph>\n                    </ScoreSection>\n                    <MainContentWrapper>\n                        <Link href={story.url} target='_blank'>\n                            <Title color='white'>{story.title}</Title>\n                        </Link>\n                        <AuthorOuter>\n                            <AuthorRow color='white'>\n                                <Span color='white'>By </Span>\n                                <AuthorSpan color='white' bold={true}>\n                                    {story.by}\n                                </AuthorSpan>\n                            </AuthorRow>\n                        </AuthorOuter>\n                    </MainContentWrapper>\n                </StoryCardWrapper>\n            ) : null}\n        </>\n    );\n};\n\n// this is going is potentially re-rendered with same props\n// with infinite scroll so keep it in memory\nexport default memo(HackerNewsStoryCard);\n","import React, { useEffect, FunctionComponent, memo } from 'react';\nimport { useGetRequest } from 'src/hooks/useGetRequest';\nimport { HackerNewsStoryCard } from 'src/components/HackerNewsStoryCard';\n\nconst HACKER_NEWS_ITEM_URL = 'https://hacker-news.firebaseio.com/v0/item/';\n\nexport type StoryType = {\n    by: string;\n    descendants: number;\n    id: number;\n    kids: number[];\n    score: number;\n    time: number;\n    title: string;\n    type: string;\n    url: string;\n};\n\ntype Props = {\n    storyId: number;\n};\n\nexport const HackerNewsStoryContainer: FunctionComponent<Props> = ({\n    storyId,\n}) => {\n    const url = `${HACKER_NEWS_ITEM_URL}${storyId}.json`;\n    const { data, isLoading, isError, setUrl } = useGetRequest(url, []);\n    const story = data;\n    // run once\n    useEffect(() => {\n        setUrl(url);\n    }, [setUrl, url]);\n\n    const retry = (): void => {\n        setUrl(url);\n    };\n\n    return (\n        <HackerNewsStoryCard\n            isError={isError}\n            isLoading={isLoading}\n            retry={retry}\n            story={story}\n        />\n    );\n};\n\n// this is going is potentially re-rendered with same props with infinite scroll so keep it in memory\nexport default memo(HackerNewsStoryContainer);\n","import styled from 'styled-components';\n\nexport const StoryGrid = styled.div`\n    display: grid;\n    /* grid-template-columns: repeat(6, 1fr); */\n    grid-gap: 1rem;\n    justify-content: center;\n    align-content: start;\n    grid-auto-flow: dense;\n    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n    grid-auto-rows: minmax(180px, auto);\n`;\n","import React, { useState, useRef, FunctionComponent } from 'react';\n\nimport { limitNumberWithinRange } from 'src/utils/NumberUtils';\nimport { useScrollPosition } from 'src/hooks/useScrollPosition';\nimport HackerNewsStoryContainer from 'src/containers/HackerNewsStoryContainer';\nimport { ErrorMessage } from 'src/components/ErrorMessage';\n\nimport { StoryGrid } from './styles';\n\nexport const MAX_STORIES = 500;\nexport const STORIES_PER_PAGE = 24;\n\ntype Props = {\n    isError: boolean;\n    isLoading: boolean;\n    storyIds: number[];\n    retry: () => void;\n};\n\nexport const checkForScrollToBottom = (\n    y: number,\n    height: number,\n    windowHeight: number\n) => {\n    return y + height <= windowHeight;\n};\n\nexport const HackerNewsStories: FunctionComponent<Props> = ({\n    isError,\n    isLoading,\n    storyIds,\n    retry,\n}) => {\n    const scrollRef = useRef<HTMLDivElement>(null);\n    const [storyCount, setStoryCount] = useState(STORIES_PER_PAGE);\n    const isBrowser = typeof window !== `undefined`;\n\n    // infinite scroll\n    useScrollPosition(\n        ({\n            currPos,\n        }: {\n            currPos: { x: number; y: number; height: number; width: number };\n        }) => {\n            if (\n                !isBrowser ||\n                !scrollRef ||\n                !scrollRef.current ||\n                storyCount >= MAX_STORIES\n            ) {\n                return null;\n            }\n\n            const isAtBottom = checkForScrollToBottom(\n                currPos.y,\n                currPos.height,\n                window.innerHeight\n            );\n\n            // if scrolled to bottom increment the story count\n            if (isAtBottom) {\n                const incrementedStoryCount = storyCount + STORIES_PER_PAGE;\n                const limitedCount = limitNumberWithinRange(\n                    incrementedStoryCount,\n                    0,\n                    MAX_STORIES\n                );\n                setStoryCount(limitedCount);\n            }\n        },\n        [storyCount],\n        scrollRef,\n        false,\n        300\n    );\n\n    return (\n        <>\n            {isError ? (\n                <ErrorMessage\n                    errorMessage='Unable to retrieve stories'\n                    retry={retry}\n                />\n            ) : isLoading ? (\n                <StoryGrid>\n                    <span>Loading stories</span>\n                    {/* TODO: proper loading state */}\n                    {/* {[...Array(24)].map((e, i) => (\n                        <StoryCardLoading />\n                    ))} */}\n                </StoryGrid>\n            ) : (\n                <StoryGrid ref={scrollRef}>\n                    {storyIds.slice(0, storyCount).map((storyId: number) => (\n                        <HackerNewsStoryContainer\n                            key={storyId}\n                            storyId={storyId}\n                        />\n                    ))}\n                </StoryGrid>\n            )}\n        </>\n    );\n};\n\nexport default HackerNewsStories;\n","export const limitNumberWithinRange = (\n    num: number,\n    min: number,\n    max: number\n): number => {\n    if (min > max) {\n        throw new Error('min must be smaller than max');\n    }\n    return Math.min(Math.max(num, min), max);\n};\n","import React, { useEffect, FunctionComponent } from 'react';\nimport { useGetRequest } from 'src/hooks/useGetRequest';\nimport { HackerNewsStories } from 'src/components/HackerNewsStories';\n\nconst HACKER_NEWS_STORIES = 'https://hacker-news.firebaseio.com/v0/';\n\ntype Props = {\n    storyType: 'topstories' | 'newstories' | 'beststories';\n};\n\nexport const HackerNewsStoriesContainer: FunctionComponent<Props> = ({\n    storyType,\n}) => {\n    const url = `${HACKER_NEWS_STORIES}${storyType}.json`;\n    const { data, isLoading, isError, setUrl } = useGetRequest(url, []);\n    const storyIds = data;\n    // run once\n    useEffect(() => {\n        setUrl(url);\n    }, [setUrl, url]);\n\n    const retry = (): void => {\n        setUrl(url);\n    };\n\n    return (\n        <HackerNewsStories\n            isError={isError}\n            isLoading={isLoading}\n            retry={retry}\n            storyIds={storyIds}\n        />\n    );\n};\n\nexport default HackerNewsStoriesContainer;\n","import React from 'react';\n\nimport { H1 } from 'src/components/Typography';\nimport { PageWrapper, PageContent } from 'src/components/Layout';\nimport {\n    ContentWrapper,\n    VerticalSpacer,\n    ColorBlock,\n} from 'src/components/Layout';\nimport HackerNewsStoriesContainer from 'src/containers/HackerNewsStoriesContainer';\n\nexport const Home = () => {\n    return (\n        <PageWrapper>\n            <PageContent>\n                <ColorBlock>\n                    <ContentWrapper>\n                        <VerticalSpacer size='extraExtraLarge' />\n                        <H1>Hacker News</H1>\n                        <VerticalSpacer size='large' />\n                        <HackerNewsStoriesContainer storyType='topstories' />\n                    </ContentWrapper>\n                </ColorBlock>\n            </PageContent>\n        </PageWrapper>\n    );\n};\n\nexport default Home;\n","import styled from 'styled-components/macro';\n\nexport const TilesWrapper = styled.div`\n    width: 100%;\n`;\n\nexport const FlexWrapRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    margin: ${({\n        theme: {\n            spacing: { small },\n        },\n    }) => `-${small}`};\n`;\n\nexport const ColorTileWrapper = styled.div`\n    padding: ${({\n        theme: {\n            spacing: { small },\n        },\n    }) => small};\n`;\n\nexport const ColorTile = styled.div`\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px;\n    padding: ${({\n        theme: {\n            spacing: { small, extraLarge },\n        },\n    }) => `${extraLarge} ${small} ${small} ${small}`};\n    background-color: ${({ color }) => color};\n    width: 170px;\n`;\n\nexport const ColorLabelWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    background-color: ${({\n        theme: {\n            colors: { white },\n        },\n    }) => white};\n    padding: ${({\n        theme: {\n            spacing: { tiny },\n        },\n    }) => tiny};\n`;\n","import React from 'react';\n\nimport { colors } from 'src/theme';\nimport { camelCaseToCapitalisedCase } from 'src/utils/StringUtils';\nimport {\n    PageWrapper,\n    PageContent,\n    ContentWrapper,\n    VerticalSpacer,\n    ColorBlock,\n} from 'src/components/Layout';\nimport { H1, H2, H3, Span, Paragraph } from 'src/components/Typography';\nimport { Button } from 'src/components/Button';\nimport { ErrorMessage } from 'src/components/ErrorMessage';\n\nimport {\n    TilesWrapper,\n    ColorTile,\n    ColorLabelWrapper,\n    ColorTileWrapper,\n    FlexWrapRow,\n} from './styles';\n\nconst colorLabelList = Object.keys(colors);\n\nexport const DesignSystem = () => {\n    return (\n        <PageWrapper>\n            <PageContent>\n                <ColorBlock>\n                    <VerticalSpacer size='extraExtraLarge' />\n                    <ContentWrapper>\n                        <H1>Design System</H1>\n                        <VerticalSpacer size='large' />\n                        <H2>Colours</H2>\n                        <VerticalSpacer size='large' />\n                        <TilesWrapper>\n                            <FlexWrapRow>\n                                {colorLabelList.map(color => (\n                                    <ColorTileWrapper key={color}>\n                                        <ColorTile color={colors[`${color}`]}>\n                                            <ColorLabelWrapper>\n                                                <Span>\n                                                    {camelCaseToCapitalisedCase(\n                                                        color\n                                                    )}\n                                                    :\n                                                </Span>\n                                                <Span>\n                                                    {colors[`${color}`]}\n                                                </Span>\n                                            </ColorLabelWrapper>\n                                        </ColorTile>\n                                    </ColorTileWrapper>\n                                ))}\n                            </FlexWrapRow>\n                        </TilesWrapper>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='yellow'>\n                    <VerticalSpacer size='medium' />\n                    <ContentWrapper>\n                        <H2 color='darkGrey'>Colour Sections</H2>\n                        <VerticalSpacer size='large' />\n                        <H3 color='darkGrey'>Yellow</H3>\n                        <VerticalSpacer size='large' />\n                        <Paragraph color='darkGrey'>\n                            Example section text\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='blue'>\n                    <VerticalSpacer size='medium' />\n                    <ContentWrapper>\n                        <H3 color='white'>Blue</H3>\n                        <VerticalSpacer size='large' />\n                        <Paragraph color='white'>\n                            Example section text\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='white'>\n                    <VerticalSpacer size='medium' />\n                    <ContentWrapper>\n                        <H3 color='darkGrey'>White</H3>\n                        <VerticalSpacer size='large' />\n                        <Paragraph color='darkGrey'>\n                            Example section text\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='pink'>\n                    <VerticalSpacer size='medium' />\n                    <ContentWrapper>\n                        <H3 color='white'>Pink</H3>\n                        <VerticalSpacer size='large' />\n                        <Paragraph color='white'>\n                            Example section text\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='darkGrey'>\n                    <VerticalSpacer size='medium' />\n                    <ContentWrapper>\n                        <H3 color='white'>Dark Grey</H3>\n                        <VerticalSpacer size='large' />\n                        <Paragraph color='white'>\n                            Example section text\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='blue'>\n                    <VerticalSpacer size='medium' />\n                    <ContentWrapper>\n                        <H2 color='white'>Typography</H2>\n                        <VerticalSpacer size='large' />\n                        <H1 color='white'>H1 Example text</H1>\n                        <VerticalSpacer size='large' />\n                        <H2 color='white'>H2 Example text</H2>\n                        <VerticalSpacer size='large' />\n                        <H3 color='white'>H3 Example text</H3>\n                        <VerticalSpacer size='large' />\n                        <Paragraph color='white'>\n                            Paragraph example text\n                        </Paragraph>\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='white' padding={false}>\n                    <VerticalSpacer size='extraLarge' />\n                    <ContentWrapper>\n                        <VerticalSpacer size='medium' />\n                        <H2 color='darkGrey'>Controls</H2>\n                        <VerticalSpacer size='large' />\n                        <H3 color='darkGrey'>Buttons</H3>\n                        <VerticalSpacer size='large' />\n                        <Button>Blue button (default)</Button>\n                        <VerticalSpacer size='small' />\n                        <Button color='pink'>Pink Button</Button>\n                        <VerticalSpacer size='small' />\n                        <Button color='darkGrey'>Dark Grey Button</Button>\n                        <VerticalSpacer size='tiny' />\n                    </ContentWrapper>\n                </ColorBlock>\n                <ColorBlock color='pink' padding={false}>\n                    <VerticalSpacer size='tiny' />\n                    <ContentWrapper>\n                        <Button color='yellow'>Yellow Button</Button>\n                        <VerticalSpacer size='small' />\n                        <Button color='white'>white Button</Button>\n                        <VerticalSpacer size='tiny' />\n                    </ContentWrapper>\n                </ColorBlock>\n\n                <ColorBlock color='blue' padding={false}>\n                    <VerticalSpacer size='extraLarge' />\n                    <ContentWrapper>\n                        <VerticalSpacer size='medium' />\n                        <H2 color='white'>Components</H2>\n                        <VerticalSpacer size='large' />\n                        <H3 color='white'>Error message</H3>\n                        <VerticalSpacer size='medium' />\n                        <ErrorMessage\n                            errorMessage='This is an error message'\n                            retry={() => {}}\n                        />\n                        <VerticalSpacer size='large' />\n                    </ContentWrapper>\n                    <VerticalSpacer size='extraExtraLarge' />\n                </ColorBlock>\n            </PageContent>\n        </PageWrapper>\n    );\n};\n\nexport default DesignSystem;\n","export const camelCaseToCapitalisedCase = (text: string): string => {\n    const result = text.replace(/([A-Z])/g, ' $1').trim();\n    return result.charAt(0).toUpperCase() + result.slice(1);\n};\n","import React, { useEffect, FC } from 'react';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\n\nimport urls from 'src/urls';\n\nimport Home from 'src/pages/Home';\nimport DesignSystem from 'src/pages/DesignSystem';\n\nexport const ScrollToTop: FC = () => {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        if (typeof window !== undefined && window.scrollTo) {\n            window.scrollTo(0, 0);\n        }\n    }, [pathname]);\n    return null;\n};\n\nexport const Routes: FC = () => {\n    return (\n        <>\n            <ScrollToTop />\n            <Switch>\n                <Route\n                    path={urls.designSystem}\n                    component={DesignSystem}\n                ></Route>\n                <Route exact={true} path={urls.home} component={Home}></Route>\n                <Redirect from='/' to={urls.home} />\n                {/* TODO 404 */}\n                {/* <Route path=\"*\">\n                    <NoMatch />\n                </Route> */}\n            </Switch>\n        </>\n    );\n};\n\nexport default Routes;\n","import styled from 'styled-components/macro';\n\nexport const HeaderWrapper = styled.header`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    width: 100vw;\n    max-width: ${({\n        theme: {\n            breakpoints: { large },\n        },\n    }) => large};\n    transition: margin ease 0.2s, opacity ease 0.3s;\n    margin-top: ${({ visible }: { visible: boolean }) =>\n        visible ? `0` : `-100px`};\n    opacity: ${({ visible }: { visible: boolean }) => (visible ? `1` : `0`)};\n    z-index: 10;\n`;\n\nexport const HeaderInner = styled.div`\n    margin: 0 auto;\n    background-color: ${({\n        theme: {\n            colors: { darkGrey },\n        },\n    }) => darkGrey};\n    padding: ${({\n        theme: {\n            spacing: { small },\n            globalPadding,\n        },\n    }) => `${small} ${globalPadding}`};\n`;\n\nexport const Links = styled.ul`\n    padding: 0;\n    max-width: ${({\n        theme: {\n            breakpoints: { large },\n        },\n    }) => large};\n\n    display: flex;\n    flex-direction: row;\n    list-style-type: none;\n    justify-content: flex-start;\n`;\n","import styled from 'styled-components/macro';\nimport { NavLink } from 'react-router-dom';\nimport { Paragraph } from 'src/components/Typography';\n\nexport const HeaderLinkItem = styled.li`\n    padding: 0;\n    margin: ${({\n        theme: {\n            spacing: { small },\n        },\n    }) => `0 ${small} 0 0`};\n`;\n\nexport const HoverInidcator = styled.div`\n    height: 3px;\n    background-color: ${({\n        theme: {\n            colors: { yellow },\n        },\n    }) => yellow};\n    margin-top: ${({\n        theme: {\n            spacing: { tiny },\n        },\n    }) => tiny};\n    width: 100%;\n    max-width: 0;\n    transition: max-width ease 0.3s;\n`;\n\nexport const RowCenter = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n    text-decoration: none;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    ${Paragraph} {\n        transition: color ease 0.3s;\n        font-weight: 600;\n    }\n\n    &.selected {\n        ${HoverInidcator} {\n            max-width: 150px;\n        }\n    }\n\n    &:hover,\n    &:focus {\n        outline: none;\n\n        ${Paragraph} {\n            color: ${({\n                theme: {\n                    colors: { yellow },\n                },\n            }) => yellow};\n        }\n    }\n`;\n","import React from 'react';\nimport { Paragraph } from 'src/components/Typography';\nimport { RowCenter } from 'src/components/Layout';\nimport { NavLinkStyled, HoverInidcator, HeaderLinkItem } from './styles';\n\nexport const HeaderNavLink = ({\n    to,\n    title,\n    exact = false,\n}: {\n    to: string;\n    title: string;\n    exact?: boolean;\n}) => {\n    return (\n        <HeaderLinkItem>\n            <NavLinkStyled exact={exact} to={to} activeClassName='selected'>\n                <Paragraph color='white'>{title}</Paragraph>\n                <RowCenter>\n                    <HoverInidcator />\n                </RowCenter>\n            </NavLinkStyled>\n        </HeaderLinkItem>\n    );\n};\n","import React, { useState, useMemo } from 'react';\n\nimport { useScrollPosition } from 'src/hooks/useScrollPosition';\nimport urls from 'src/urls';\n\nimport { H2 } from 'src/components/Typography';\nimport { VerticalSpacer } from 'src/components/Layout';\nimport { HeaderWrapper, HeaderInner, Links } from './styles';\n\nimport { HeaderNavLink } from 'src/components/HeaderNavLink';\n\nexport const Header = ({ visible }: { visible: boolean }) => {\n    return (\n        <HeaderWrapper visible={visible}>\n            <HeaderInner>\n                <H2 color='white'>Hacker News</H2>\n                <VerticalSpacer size='medium' />\n                <nav>\n                    <Links>\n                        <HeaderNavLink\n                            to={urls.home}\n                            title='Home'\n                            exact={true}\n                        />\n                        <HeaderNavLink\n                            to={urls.designSystem}\n                            title='Design System'\n                        />\n                    </Links>\n                </nav>\n            </HeaderInner>\n        </HeaderWrapper>\n    );\n};\n\nexport const HideOnScroll = () => {\n    const [hideOnScroll, setHideOnScroll] = useState(true);\n\n    useScrollPosition(\n        ({\n            prevPos,\n            currPos,\n        }: {\n            prevPos: { x: number; y: number };\n            currPos: { x: number; y: number };\n        }) => {\n            const isShow = currPos.y >= prevPos.y;\n            if (isShow !== hideOnScroll) setHideOnScroll(isShow);\n        },\n        [hideOnScroll],\n        null,\n        false,\n        300\n    );\n\n    return useMemo(() => <Header visible={hideOnScroll} />, [hideOnScroll]);\n};\n\nexport default HideOnScroll;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport theme from 'src/theme';\nimport Routes from 'src/Routes';\nimport Header from 'src/components/Header';\n\n// This is going to be where all the project level HOCs live\nconst App: React.FC = () => {\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <Router>\n                    <Header />\n                    <Routes />\n                    {/* TODO FOOTER */}\n                </Router>\n            </ThemeProvider>\n        </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}